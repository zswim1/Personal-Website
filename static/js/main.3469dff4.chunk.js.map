{"version":3,"sources":["Home/Headshot.jpg","Projects/basketball.png","Projects/CourseMaster.png","Projects/drone.png","Projects/Milliman.jpg","Projects/Travel.png","Photos/Family.jpg","Photos/bike.png","Photos/Grandpa.jfif","Photos/Mountain.jfif","Home/Home.js","Projects/Projects.js","Photos/Photos.js","Exercise/Exercise.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","id","src","Headshot","alt","Button","variant","className","onClick","window","location","href","open","list-style-type","Projects","expand","section","button","display","getComputedStyle","document","getElementById","console","log","style","innerHTML","Milliman","Travel","CourseMaster","Basketball","Drone","Photos","Bike","Grandpa","class","Family","Mountain","Exercise","useState","screen","setScreen","unitButton1","setUButton1","unitButton2","setUButton2","currentUnit","setCurrentUnit","displayUnit","setDisplayUnit","intervalButton1","setIButton1","intervalButton2","setIButton2","intervalButton3","setIButton3","intervalButton4","setIButton4","currentInterval","setCurrentInterval","soundButton1","setSButton1","soundButton2","setSButton2","isSoundOn","setSound","trackTime","setTrackTime","once","setOnce","useStateWithCallback","startTime","playSound","setStartTime","SpeechSynthesisUtterance","message","voices","setVoices","distance","setDistance","displayDist","setDisplayDist","intervalsDone","setIntervalsDone","latitude","longitude","setLocation","timeString","setTimeString","MAPBOX_TOKEN","zoom","viewport","setViewport","markerData","setMarkerData","speechSynthesis","onvoiceschanged","voiceArray","getVoices","changeScreen","i","askLocation","finishTracking","resetPage","firstTime","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","watchPosition","pos","coord","coords","lat","long","tempTime","Date","getTime","newDist","calcDistance","checkInterval","clearWatch","err","alert","addFinalMarker","pastMarkers","markerPush","key","length","classStr","push","totalDist","getDistance","intervalCount","distString","toFixed","useEffect","refreshId","setInterval","currentDate","updateTime","clearInterval","dif","Math","round","hours","floor","leftovers1","minutes","minuteStr","seconds","secondStr","soundStr","msg","voiceArr","voice","voiceURI","volume","rate","pitch","lang","text","speak","crd1","crd2","unit","lat1","long1","lat2","long2","radlat1","PI","radlat2","theta","radtheta","dist","sin","cos","acos","updateUnit","newButton","updateSound","updateInterval","idNum","parseInt","substring","e","target","onViewportChange","nextViewport","mapboxApiAccessToken","width","height","map","point","App","makeBold","classList","add","removeBold","remove","to","textDecoration","onMouseEnter","onMouseLeave","path","Boolean","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3469dff4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Headshot.89f76b16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/basketball.983be2ba.png\";","module.exports = __webpack_public_path__ + \"static/media/CourseMaster.a2bbc2d6.png\";","module.exports = __webpack_public_path__ + \"static/media/drone.43bcba33.png\";","module.exports = __webpack_public_path__ + \"static/media/Milliman.e8e410d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Travel.510d4984.png\";","module.exports = __webpack_public_path__ + \"static/media/Family.f6072aa0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bike.349d5ece.png\";","module.exports = __webpack_public_path__ + \"static/media/Grandpa.d767a0c9.jfif\";","module.exports = __webpack_public_path__ + \"static/media/Mountain.24f924d0.jfif\";","import React from 'react';\r\nimport './Home.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Headshot from './Headshot.jpg';\r\n\r\nfunction Home(){\r\n\r\n    const gotoLinkedIn = () => {\r\n        window.open('https://linkedin.com/in/zachary-swim-47535616a', '_blank');\r\n    }\r\n\r\n    const gotoEmail = () => {\r\n        window.location.href='mailto:zach.swim@dmcinfo.com';\r\n    }\r\n\r\n    const gotoGithub = () => {\r\n        window.open('https://github.com/zswim1', '_blank');\r\n    }\r\n\r\n    return(\r\n        <div id=\"mainContent\">\r\n            <div id=\"pictures\">\r\n                <img id=\"picture\" src={Headshot} alt=\"Headshot\"/>\r\n                <div id=\"nameAndLinks\">\r\n                    <div id=\"name\">Zachary Swim</div>\r\n                    <div id=\"links\">\r\n                        <Button id=\"EmailLink\" variant=\"outline-danger\" className=\"link\" onClick={() => {gotoEmail()}}>Email</Button>\r\n                        <Button id=\"LinkedInLink\" variant=\"outline-primary\" className=\"link\" onClick={() => {gotoLinkedIn()}}>LinkedIn</Button>\r\n                        <Button id=\"GithubLink\" variant=\"outline-success\" className=\"link\" onClick={() => {gotoGithub()}}>Github</Button>\r\n                    </div>\r\n                    <div id=\"skillTitle\">Skills</div>\r\n                    <ul id=\"skills\" list-style-type=\"disc\">\r\n                        <li>C</li>\r\n                        <li>C++</li>\r\n                        <li>C#</li>\r\n                        <li>Java</li>\r\n                        <li>JavaScript</li>\r\n                        <li>HTML</li>\r\n                        <li>CSS</li>\r\n                        <li>React</li>\r\n                        <li>API implementation</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div id=\"aboutMe\">\r\n                <div id=\"about\">\r\n                    <div id=\"aboutTitle\">About Me</div>\r\n                    <div id=\"aboutText\">\r\n                        I'm a Software Engineer in Chicago, IL working for DMC, inc. on full stack tech consulting projects. \r\n                        I graduated from Purdue University with a B.S. in Computer Science.\r\n                        When I'm not coding, I love to ride my bike, hike, ski, and play card games.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Projects.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Basketball from './basketball.png';\r\nimport CourseMaster from './CourseMaster.png';\r\nimport Drone from './drone.png';\r\nimport Milliman from './Milliman.jpg';\r\nimport Travel from './Travel.png';\r\n\r\n\r\nfunction Projects(){\r\n\r\n\r\n    const expand = (section, button) => {\r\n        var display = getComputedStyle(document.getElementById(section), null).display;\r\n        console.log(display)\r\n        if(display === \"none\"){\r\n            document.getElementById(section).style.display = \"block\";\r\n            document.getElementById(button).innerHTML = \"Hide\";\r\n        } else {\r\n            document.getElementById(section).style.display = \"none\";\r\n            document.getElementById(button).innerHTML = \"Learn More\";\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div id=\"mainContent\">\r\n\r\n            <div id=\"Milliman\">\r\n                <div id=\"projectAndButton\">\r\n                    <div className=\"projectHeader\">Milliman  <span className=\"dateInfo\">Summer 2019</span></div>\r\n                    <Button id=\"infoMill\" variant=\"danger\" className=\"infoButton\" onClick={() => expand('millContent', 'infoMill')}>Learn More</Button>\r\n                </div>\r\n                <div id=\"millContent\">\r\n                    <br/>\r\n                    <img id=\"millimage\" className=\"projImage\" src={Milliman} alt=\"Milliman\"/>\r\n                    <div className=\"description\" id=\"millDescription\">\r\n                        Summer Internship where I created a web application that was used primarily on the IPAD. Gathered, managed, and displayed large data sets stored on Salesforce. Added Email, Print, and Dropbox functionality using templates and API's.\r\n                    </div>\r\n                    <div className=\"techHeader\">Technologies Used</div>\r\n                    <ul>\r\n                        <li>HTML</li>\r\n                        <li>CSS</li>\r\n                        <li>JavaScript</li>\r\n                        <li>Adobe XD</li>\r\n                        <li>Salesforce API</li>\r\n                        <li>Ipad optimization</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"TravelTalk\">\r\n                <div id=\"projectAndButton\">\r\n                    <div className=\"projectHeader\">TravelTalk  <span className=\"dateInfo\">Spring 2019</span></div>\r\n                    <Button id=\"infoTT\" variant=\"danger\" className=\"infoButton\" onClick={() => expand('ttContent', 'infoTT')}>Learn More</Button>\r\n                </div>\r\n                <div id=\"ttContent\">\r\n                    <div className=\"youtubeLink\">\r\n                            <a href=\"https://www.youtube.com/watch?v=lVhOerA1oS8&t=23s\">Travel Talk Video</a>\r\n                        </div>\r\n                    <img id=\"ttimage\" className=\"projImage\" src={Travel} alt=\"Travel Talk\"/>\r\n                    <div className=\"description\" id=\"ttDescription\">\r\n                        A social platform that allows users to engage in discussions and share their experiences about different places throughout the world. Users were able to tag locations on a map that they had been to and discuss what they had thought about that location. Users were also able to follow and be followed by other users allowing their locations and thoughts to be shared with others.\r\n                    </div>\r\n                    <div className=\"techHeader\">Technologies Used</div>\r\n                    <ul>\r\n                        <li>HTML</li>\r\n                        <li>CSS</li>\r\n                        <li>JavaScript</li>\r\n                        <li>React</li>\r\n                        <li>Firebase hosting</li>\r\n                        <li>Map API</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"CourseMaster\">\r\n                <div id=\"projectAndButton\">\r\n                    <div className=\"projectHeader\">Course Master  <span className=\"dateInfo\">Fall 2018</span></div>\r\n                    <Button id=\"infoCourse\" variant=\"danger\" className=\"infoButton\" onClick={() => expand('courseContent', 'infoCourse')}>Learn More</Button>\r\n                </div>\r\n                <div id=\"courseContent\">\r\n                    <br/>\r\n                    <img id=\"courseimage\" className=\"projImage\" src={CourseMaster} alt=\"Course Master\"/>\r\n                    <div className=\"description\" id=\"courseDescription\">\r\n                        A web application where Purdue students can go to review the courses they have taken and remark on how difficult the course was, how many exams there were, whether attendance was necessary, and many other attributes. As well as leaving reviews, students can look at reviews other students have left to determine what classes they want to take.\r\n                    </div>\r\n                    <div className=\"techHeader\">Technologies Used</div>\r\n                    <ul>\r\n                        <li>HTML</li>\r\n                        <li>CSS</li>\r\n                        <li>JavaScript</li>\r\n                        <li>Angular</li>\r\n                        <li>Firebase hosting</li>\r\n                        <li>Purdue API</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"VrBasketball\">\r\n                <div id=\"projectAndButton\">\r\n                    <div className=\"projectHeader\">VR Basketball  <span className=\"dateInfo\">Fall 2018</span></div>\r\n                    <Button id=\"infoBBall\" variant=\"danger\" className=\"infoButton\" onClick={() => expand('bballContent', 'infoBBall')}>Learn More</Button>\r\n                </div>\r\n                <div id=\"bballContent\">\r\n                    <div className=\"youtubeLink\">\r\n                        <a href=\"https://www.youtube.com/watch?v=TpBwJUWcQLg&feature=youtu.be\">VR Basketball Video</a>\r\n                    </div>\r\n                    <img id=\"bballimage\" className=\"projImage\" src={Basketball} alt=\"Basketball VR\"/>\r\n                    <div className=\"description\" id=\"bballDescription\">\r\n                        A VR basketball game where the player can practice shooting the ball or race against the clock trying to make baskets.\r\n                    </div>\r\n                    <div className=\"techHeader\">Technologies Used</div>\r\n                    <ul>\r\n                        <li>Unity</li>\r\n                        <li>C#</li>\r\n                        <li>HTC Vive headset</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"VrDrone\">\r\n                <div id=\"projectAndButton\">\r\n                    <div className=\"projectHeader\">VR Drone Simulator  <span className=\"dateInfo\">Fall 2018</span></div>\r\n                    <Button id=\"infoDrone\" variant=\"danger\" className=\"infoButton\" onClick={() => expand('droneContent', 'infoDrone')}>Learn More</Button>\r\n                </div>\r\n                <div id=\"droneContent\">\r\n                    <div className=\"youtubeLink\">\r\n                            <a href=\"https://www.youtube.com/watch?v=1xxuXDVefUE\">VR Drone Video </a>\r\n                    </div>\r\n                    <img id=\"droneimage\" className=\"projImage\" src={Drone} alt=\"VR Drone\"/>\r\n                    <div className=\"description\" id=\"droneDescription\">\r\n                        A VR third person drone simulator where the player tries to race through a city while driving through gates.\r\n                    </div>\r\n                    <div className=\"techHeader\">Technologies Used</div>\r\n                    <ul>\r\n                        <li>Unity</li>\r\n                        <li>C#</li>\r\n                        <li>HTC Vive headset</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './Photos.css';\r\nimport Family from './Family.jpg';\r\nimport Bike from './bike.png';\r\nimport Grandpa from './Grandpa.jfif';\r\nimport Mountain from './Mountain.jfif'\r\n\r\nfunction Photos(){\r\n    return(\r\n        <div id=\"bottomPictures\">\r\n            <div id=\"row1\" className=\"row\">\r\n                <img id=\"bikePic\" src={Bike} alt=\"Bike\"/>\r\n                <img id=\"footballPic\" src={Grandpa} alt=\"Grandpa\"/>\r\n            </div>\r\n            <div id=\"row2\" class=\"row\">\r\n                <img id=\"familyPic\" src={Family} alt=\"Family\"/>\r\n                <img id=\"mountainPic\" src={Mountain} alt=\"Mountain\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Photos;","import React, {useState, useEffect} from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport './Exercise.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport useStateWithCallback from 'use-state-with-callback';\r\nimport ReactMapGL, {Marker} from 'react-map-gl';\r\n// import 'https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css';\r\n\r\n\r\nfunction Exercise(){\r\n    /* used to set the current mode */\r\n    const [screen, setScreen] = useState(0); /* 0:before, 1:during exercise, 2:after */\r\n\r\n    /* for before exercise */\r\n    const [unitButton1, setUButton1] = useState(\"primary\");\r\n    const [unitButton2, setUButton2] = useState(\"secondary\");\r\n    const [currentUnit, setCurrentUnit] = useState(\"Miles\");\r\n    const [displayUnit, setDisplayUnit] = useState(\"Mi\");\r\n    const [intervalButton1, setIButton1] = useState(\"primary\");\r\n    const [intervalButton2, setIButton2] = useState(\"secondary\");\r\n    const [intervalButton3, setIButton3] = useState(\"secondary\");\r\n    const [intervalButton4, setIButton4] = useState(\"secondary\");\r\n    const [currentInterval, setCurrentInterval] = useState(1);\r\n    const [soundButton1, setSButton1] = useState(\"success\");\r\n    const [soundButton2, setSButton2] = useState(\"secondary\");\r\n    const [isSoundOn, setSound] = useState(true);\r\n    const [trackTime, setTrackTime] = useState(false);\r\n    const [once, setOnce] = useState(true);\r\n    // const [finishTime, setFinishTime] = useState(\"\");\r\n    const [startTime, setStartTime] = useStateWithCallback(\"\", startTime => {\r\n        if(startTime !== \"\" && once){\r\n            setOnce(false);\r\n            if(isSoundOn){\r\n                playSound('Begin workout');\r\n            }\r\n            setTrackTime(true);\r\n        }\r\n    });\r\n    const [message, setMessage] = useState(new SpeechSynthesisUtterance());\r\n    const [voices, setVoices] = useState(null);\r\n\r\n    /* for during exercise */\r\n    const [distance, setDistance] = useState(0);\r\n    const [displayDist, setDisplayDist] = useState(\"0.00\");\r\n    const [intervalsDone, setIntervalsDone] = useState(0);\r\n    const [location, setLocation] = useState({\r\n        latitude: 0,\r\n        longitude: 0,\r\n    });\r\n    const [timeString, setTimeString] = useState(\"0h:00m:00s\");\r\n\r\n    /* for map */\r\n    // const [bingmapKey, setBingMapKey] = useState(\"\");\r\n    const MAPBOX_TOKEN = \"pk.eyJ1IjoienN3aW0iLCJhIjoiY2tlcTA2em5wMG5xejJyb2Y5NXppaG9nMiJ9.UG_bJB1XbFGN4-UZL98sWg\";\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 0,\r\n        longitude: 0,\r\n        zoom: 14,\r\n    })\r\n    const [markerData, setMarkerData] = useState([])\r\n\r\n    \r\n    /* for after exercise */\r\n    window.speechSynthesis.onvoiceschanged = function() {\r\n        var voiceArray = speechSynthesis.getVoices();\r\n        setVoices(voiceArray);\r\n    }\r\n\r\n    const changeScreen = (i) => {\r\n        if(i===1){\r\n            askLocation();\r\n        } else if(i===2){\r\n            finishTracking();\r\n        } else {\r\n            resetPage();\r\n        }\r\n        setScreen(i);\r\n    }\r\n\r\n    var firstTime = true;\r\n    const askLocation = () => {\r\n        var id, options;\r\n\r\n        function success(pos){\r\n            var coord = pos.coords;\r\n            var lat = coord.latitude;\r\n            var long = coord.longitude;\r\n\r\n            if(firstTime){\r\n                //console.log(\"start tracking\");\r\n                firstTime = false;\r\n                var tempTime = new Date().getTime();\r\n                setStartTime(tempTime);\r\n            } else {\r\n                var newDist = calcDistance(location, coord, currentUnit);\r\n                var totalDist = distance + newDist;\r\n                checkInterval(totalDist);\r\n            }\r\n            var currentLocation = {\r\n                latitude: lat,\r\n                longitude: long,\r\n            }\r\n            //console.log(currentLocation, location, (currentLocation === location));\r\n            if(currentLocation !== location){\r\n                setLocation({\r\n                    latitude: lat,\r\n                    longitude: long,\r\n                });\r\n            }\r\n\r\n            if(!trackTime){\r\n                navigator.geolocation.clearWatch(id);\r\n            }\r\n        }\r\n\r\n        function error(err){\r\n            alert('unable to get location data: ' + err.message);\r\n        }\r\n\r\n        options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 10000\r\n        };\r\n    \r\n        id = navigator.geolocation.watchPosition(success, error, options);\r\n    }\r\n\r\n    const finishTracking = () => {\r\n        if(isSoundOn){\r\n            playSound('Exercise completed');\r\n        }\r\n        setTrackTime(false);\r\n        addFinalMarker();\r\n    }\r\n\r\n    const resetPage = () => {\r\n\r\n    }\r\n\r\n    const addFinalMarker = () => {\r\n        var classStr = \"finalMarker\";\r\n        var pastMarkers = markerData;\r\n        var markerKey = \"marker\" + pastMarkers.length;\r\n        var markerPush = {\r\n                            key: markerKey,\r\n                            latitude: location.latitude, \r\n                            longitude: location.longitude,\r\n                            classStr: classStr,\r\n                        }\r\n        pastMarkers.push(markerPush);\r\n        console.log(pastMarkers);\r\n        setMarkerData(pastMarkers);\r\n    }\r\n\r\n    const checkInterval = (totalDist) => {\r\n        var nextInterval = (intervalsDone + 1) * getDistance();\r\n        if(totalDist >= nextInterval){\r\n            var intervalCount = intervalsDone + 1;\r\n            // console.log(timeString);\r\n            if(isSoundOn){\r\n                var soundStr = \"Distance: \" + totalDist + \", Time: \" + timeString // + \",  Split time: \";\r\n                playSound(soundStr);\r\n            }\r\n\r\n            setIntervalsDone(intervalCount);\r\n\r\n        }\r\n        var distString = \"\";\r\n        if(totalDist < 1){\r\n            distString = \"\" + totalDist.toFixed(2);\r\n        } else {\r\n            distString = \"\" + totalDist.toFixed(1);\r\n        }\r\n\r\n        setDistance(totalDist);\r\n        setDisplayDist(distString);\r\n    }\r\n\r\n    // const addInterval = () => {\r\n    //     var totalDist = distance + getDistance();\r\n    //     checkInterval(totalDist);\r\n    // }\r\n\r\n    const getDistance = () => {\r\n        if(currentInterval === 1){\r\n            return 1;\r\n        } else if(currentInterval === 2){\r\n            return 0.5;\r\n        } else if(currentInterval === 3){\r\n            return 0.25;\r\n        } else {\r\n            return 0.1;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(trackTime){\r\n            var refreshId = setInterval(() => {\r\n\r\n                var currentDate = new Date().getTime();\r\n                // var startDate = startTime;\r\n\r\n                updateTime(currentDate);\r\n\r\n            }, 1000);\r\n        }\r\n        \r\n        return () => {\r\n            clearInterval(refreshId);\r\n        };\r\n\r\n    }, [trackTime]);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"in here\", location, screen, markerData);\r\n        if(screen === 1){\r\n            var classStr = \"markerDiv\";\r\n            var pastMarkers = markerData;\r\n            if(pastMarkers.length === 0){\r\n                classStr = \"initialMarker\";\r\n            }\r\n            var markerKey = \"marker\" + pastMarkers.length;\r\n            var markerPush = {\r\n                                key: markerKey,\r\n                                latitude: location.latitude, \r\n                                longitude: location.longitude,\r\n                                classStr: classStr,\r\n                            }\r\n            pastMarkers.push(markerPush);\r\n            // console.log(pastMarkers);\r\n            setMarkerData(pastMarkers);\r\n            setViewport({\r\n                latitude: location.latitude,\r\n                longitude: location.longitude,\r\n                zoom: viewport.zoom,\r\n            })\r\n        }\r\n    }, [location])\r\n\r\n\r\n    const updateTime = (currentDate) => {\r\n        // console.log(markerData);\r\n        var dif = Math.round((currentDate - startTime) / 1000);\r\n\r\n        var hours = Math.floor(dif/3600);\r\n        var leftovers1 = dif % 3600;\r\n        var minutes = Math.floor(leftovers1 / 60);\r\n        var minuteStr = \"\" + minutes;\r\n        if(minutes < 10){\r\n            minuteStr = \"0\" + minutes;\r\n        }\r\n        var seconds = leftovers1 % 60;\r\n        var secondStr = \"\" + seconds;\r\n        if(seconds < 10){\r\n            secondStr = \"0\" + seconds;\r\n        }\r\n\r\n        var newTime = hours + \"h:\" + minuteStr + \"m:\" + secondStr + \"s\";\r\n        setTimeString(newTime);\r\n    }\r\n\r\n    const playSound = (soundStr) => {\r\n        var msg = message;\r\n        var voiceArr = voices; // Note: some voices don't support altering params\r\n        msg.voice = voiceArr[4];\r\n        msg.voiceURI = 'native';\r\n        msg.volume = 1; // 0 to 1\r\n        msg.rate = 0.9; // 0.1 to 10\r\n        msg.pitch = 0; //0 to 2\r\n        msg.lang = 'en-US';\r\n    \r\n        msg.text = soundStr;\r\n        // console.log(soundStr);\r\n    \r\n        speechSynthesis.speak(msg);\r\n    }\r\n    \r\n    const calcDistance = (crd1, crd2, unit) => {\r\n        var lat1 = crd1.latitude;\r\n        var long1 = crd1.longitude;\r\n        var lat2 = crd2.latitude;\r\n        var long2 = crd2.longitude;\r\n\r\n        if ((lat1 === lat2) && (long1 === long2)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            var radlat1 = Math.PI * lat1/180;\r\n            var radlat2 = Math.PI * lat2/180;\r\n            var theta = long1-long2;\r\n            var radtheta = Math.PI * theta/180;\r\n            var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n            if (dist > 1) {\r\n                dist = 1;\r\n            }\r\n            dist = Math.acos(dist);\r\n            dist = dist * 180/Math.PI;\r\n            dist = dist * 60 * 1.1515;\r\n            if (unit===\"Kilometers\") { dist = dist * 1.609344 }\r\n            return dist;\r\n        }\r\n    }\r\n\r\n    const updateUnit = (newButton) => {\r\n        var id = newButton.id;\r\n        if(id === \"mileButton\" && unitButton2 === \"primary\"){\r\n            setUButton1(\"primary\");\r\n            setUButton2(\"secondary\");\r\n            setCurrentUnit(\"Miles\");\r\n            setDisplayUnit(\"Mi\");\r\n        } else if(id === \"kmButton\" && unitButton1 === \"primary\"){\r\n            setUButton2(\"primary\");\r\n            setUButton1(\"secondary\");\r\n            setCurrentUnit(\"Kilometers\");\r\n            setDisplayUnit(\"KM\");\r\n        } else {\r\n            //do nothing\r\n        }\r\n    }\r\n\r\n    const updateSound = (newButton) => {\r\n        var id = newButton.id;\r\n        if(id === \"soundOnButton\" && soundButton2 === \"danger\"){\r\n            setSButton1(\"success\");\r\n            setSButton2(\"secondary\");\r\n            setSound(true);\r\n        } else if(id === \"soundOffButton\" && soundButton1 === \"success\"){\r\n            setSButton2(\"danger\");\r\n            setSButton1(\"secondary\");\r\n            setSound(false);\r\n        } else {\r\n            //do nothing\r\n        }\r\n    }\r\n\r\n    const updateInterval = (newButton) => {\r\n        var id = \"\" + newButton.id;\r\n        var idNum = parseInt(id.substring(id.length-1));\r\n        if(currentInterval === 1){\r\n            if(idNum === 4){\r\n                setIButton1(\"secondary\");\r\n                setIButton4(\"primary\");\r\n                setCurrentInterval(4);\r\n            } else if(idNum === 3){\r\n                setIButton1(\"secondary\");\r\n                setIButton3(\"primary\");\r\n                setCurrentInterval(3);\r\n            } else if(idNum === 2){\r\n                setIButton1(\"secondary\");\r\n                setIButton2(\"primary\");\r\n                setCurrentInterval(2);\r\n            }\r\n        } else if(currentInterval === 2){\r\n            if(idNum === 4){\r\n                setIButton2(\"secondary\");\r\n                setIButton4(\"primary\");\r\n                setCurrentInterval(4);\r\n            } else if(idNum === 3){\r\n                setIButton2(\"secondary\");\r\n                setIButton3(\"primary\");\r\n                setCurrentInterval(3);\r\n            } else if(idNum === 1){\r\n                setIButton2(\"secondary\");\r\n                setIButton1(\"primary\");\r\n                setCurrentInterval(1);\r\n            }\r\n        } else if(currentInterval === 3){\r\n            if(idNum === 4){\r\n                setIButton3(\"secondary\");\r\n                setIButton4(\"primary\");\r\n                setCurrentInterval(4);\r\n            } else if(idNum === 3){\r\n                setIButton3(\"secondary\");\r\n                setIButton1(\"primary\");\r\n                setCurrentInterval(1);\r\n            } else if(idNum === 2){\r\n                setIButton3(\"secondary\");\r\n                setIButton2(\"primary\");\r\n                setCurrentInterval(2);\r\n            }\r\n        } else if(currentInterval === 4){\r\n            if(idNum === 1){\r\n                setIButton4(\"secondary\");\r\n                setIButton1(\"primary\");\r\n                setCurrentInterval(1);\r\n            } else if(idNum === 3){\r\n                setIButton4(\"secondary\");\r\n                setIButton3(\"primary\");\r\n                setCurrentInterval(3);\r\n            } else if(idNum === 2){\r\n                setIButton4(\"secondary\");\r\n                setIButton2(\"primary\");\r\n                setCurrentInterval(2);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        (screen === 0) ? \r\n            <div id=\"beforeStart\" className=\"contentHolder\">\r\n                <div id=\"mainHeader\">\r\n                    Exercise!\r\n                </div>\r\n                <div className=\"sectionHeader\">\r\n                    Select an unit for distance\r\n                </div>\r\n                <div id=\"unitRadios\" className=\"radioSection\">\r\n                    <Button id=\"mileButton\" variant={unitButton1} onClick={e => updateUnit(e.target)}>Miles</Button>\r\n                    <Button id=\"kmButton\" variant={unitButton2} onClick={e => updateUnit(e.target)}>Kilometers</Button>\r\n                </div>\r\n                <div className=\"sectionHeader\">\r\n                        Select an interval for distance\r\n                    </div>\r\n                <div id=\"selectInterval\" className=\"radioSection\">\r\n                    <Button id=\"intervalButton1\" variant={intervalButton1} onClick={e => updateInterval(e.target)} >1.0</Button>\r\n                    <Button id=\"intervalButton2\" variant={intervalButton2} onClick={e => updateInterval(e.target)} >0.5</Button>\r\n                    <Button id=\"intervalButton3\" variant={intervalButton3} onClick={e => updateInterval(e.target)} >0.25</Button>\r\n                    <Button id=\"intervalButton4\" variant={intervalButton4} onClick={e => updateInterval(e.target)} >0.1</Button>\r\n                </div>\r\n                <div className=\"sectionHeader\">\r\n                    Sound Settings\r\n                </div>\r\n                <div id=\"unitRadios\" className=\"radioSection\">\r\n                    <Button id=\"soundOnButton\" variant={soundButton1} onClick={e => updateSound(e.target)}>On</Button>\r\n                    <Button id=\"soundOffButton\" variant={soundButton2} onClick={e => updateSound(e.target)}>Off</Button>\r\n                </div>\r\n                <Button id=\"startButton\" variant=\"success\" onClick={() => changeScreen(1)}>Start Exercise</Button>\r\n            </div>\r\n        : (screen === 1) ?\r\n            <div id=\"duringExercise\" className=\"contentHolder\">\r\n                <div className=\"timeLabel\">\r\n                    <div className=\"timeHeader\">Time: <span id=\"time\">{timeString}</span></div>\r\n                </div>\r\n                <div className=\"distanceLabel\">\r\n                    <div className=\"distanceHeader\">Distance: <span id=\"distance\">{displayDist} {displayUnit}</span></div>\r\n                </div>\r\n                {/* <div id=\"intervalTimes\" className=\"hidden\">\r\n                    <div id=\"intervalHeader\">Split Times</div>\r\n                    \r\n                </div> */}\r\n                {/* <button id=\"addDistance\" onClick={() => addInterval()}>Add Distance</button> */}\r\n                <Button id=\"finishButton\" variant=\"danger\" onClick={() => changeScreen(2)}>End Exercise</Button>\r\n\r\n                <div id=\"mapSpace\">\r\n                    \r\n                    <ReactMapGL\r\n                        {...viewport} onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        id=\"mapView\"\r\n                    >\r\n\r\n                        {/* <Marker \r\n                            latitude={location.latitude} \r\n                            longitude={location.longitude}\r\n                        >\r\n                            <div className=\"markerDiv\"></div>\r\n                        </Marker> */}\r\n                        {markerData.map(\r\n                            point => <Marker key={point.key} longitude={point.longitude} latitude={point.latitude}><div className={point.classStr}></div></Marker>\r\n                        )}\r\n                    </ReactMapGL>\r\n                </div>\r\n            </div>\r\n        : \r\n            <div id=\"afterFinish\" className=\"contentHolder\">\r\n                <div id=\"summaryHeader\">Exercise Summary</div>\r\n                <div className=\"timeLabel\">\r\n                    <div className=\"timeHeader\">Time: <span id=\"timeHolder\">{timeString}</span></div>\r\n                </div>\r\n                <div className=\"distanceLabel\">\r\n                    <div className=\"distanceHeader\">Distance: <span id=\"distanceHolder\">{displayDist} {displayUnit}</span></div>\r\n                </div>\r\n                {/* <div id=\"pace\">Pace: <span id=\"paceHolder\"></span></div> */}\r\n                \r\n                \r\n                {/* <div id=\"splits\">\r\n                    <div id=\"splitHeader\">\r\n                        Split times\r\n                    </div>\r\n                    <div id=\"splitContent\">\r\n                    </div>\r\n                </div> */}\r\n\r\n\r\n                {/* <button id=\"home\" onClick={() => changeScreen(0)}>Reset Page</button> */}\r\n                <div id=\"mapSpace\">\r\n                    \r\n                    <ReactMapGL\r\n                        {...viewport} onViewportChange={nextViewport => setViewport(nextViewport)}\r\n                        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        id=\"mapView\"\r\n                    >\r\n\r\n                        {/* <Marker \r\n                            latitude={location.latitude} \r\n                            longitude={location.longitude}\r\n                        >\r\n                            <div className=\"markerDiv\"></div>\r\n                        </Marker> */}\r\n                        {markerData.map(\r\n                            point => <Marker key={point.key} longitude={point.longitude} latitude={point.latitude}><div className={point.classStr}></div></Marker>\r\n                        )}\r\n                    </ReactMapGL>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Exercise;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport Home from './Home/Home';\nimport Projects from './Projects/Projects';\nimport Photos from './Photos/Photos';\nimport Exercise from './Exercise/Exercise';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n    const makeBold = (id) => {\n      // console.log('here');\n        var link = document.getElementById(id);\n        link.classList.add(\"Bold\");\n    };\n\n    const removeBold = (id) => {\n        var link = document.getElementById(id);\n        link.classList.remove(\"Bold\");\n    }\n\n    return (\n        <Router>\n            <div id=\"allContent\">\n                <nav>\n                    <div id=\"navBar\">\n                        <div id=\"navName\">\n                            Zachary Swim\n                        </div>\n                        <div className=\"navLinkBox\">\n                            <Link to=\"/\" id=\"link1\" className=\"navLink\" style={{ textDecoration: 'none' }} onMouseEnter={() => makeBold('link1')} onMouseLeave={() => removeBold('link1')}>Home</Link>\n                        </div>\n                        <div className=\"navLinkBox\">\n                            <Link to=\"/Projects\" id=\"link2\" className=\"navLink\" style={{ textDecoration: 'none' }} onMouseEnter={() => makeBold('link2')} onMouseLeave={() => removeBold('link2')}>Projects</Link>\n                        </div>\n                        <div className=\"navLinkBox\">\n                            <Link to=\"/Photos\" id=\"link3\" className=\"navLink\" style={{ textDecoration: 'none' }} onMouseEnter={() => makeBold('link3')} onMouseLeave={() => removeBold('link3')}>Photos</Link>\n                        </div>\n                        <div id=\"exerciseBox\" className=\"navLinkBox\">\n                            <Link to=\"/Exercise\" id=\"link4\" className=\"navLink\" style={{ textDecoration: 'none' }} onMouseEnter={() => makeBold('link4')} onMouseLeave={() => removeBold('link4')}>Exercise</Link>\n                        </div>\n                    </div>\n                </nav>\n\n                <Switch>\n                    <Route path=\"/Projects\">\n                        <Projects />\n                    </Route>\n                    <Route path=\"/Photos\">\n                        <Photos />\n                    </Route>\n                    <Route path=\"/Exercise\">\n                        <Exercise />\n                    </Route>\n                    <Route path=\"/\">\n                        <Home />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}